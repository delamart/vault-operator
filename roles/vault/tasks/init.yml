---
- name: Init vault0
  community.kubernetes.k8s_exec:
    namespace: "{{ namespace }}"
    pod: vault-0
    command: "vault operator init -format=json -key-shares={{ key_shares }} -key-threshold={{ key_threshold }}"
  register: vault_0_init

- name: Set root token and unseal keys
  set_fact:
    vault_root_token:   "{{ vault_0_init.stdout|from_json|json_query('root_token') }}"
    vault_unseal_keys:  "{{ vault_0_init.stdout|from_json|json_query('unseal_keys_b64') }}"
  when: vault_0_init.stdout is defined

- name: deploy root token secret
  community.kubernetes.k8s:
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'secret-root-token.yml.j2') }}"
    wait: yes
  when: vault_root_token is defined

- name: deploy unseal keys secret
  community.kubernetes.k8s:
    state: present
    namespace: "{{ namespace }}"
    definition: "{{ lookup('template', 'secret-unseal-keys.yml.j2') }}"
    wait: yes
  when: vault_unseal_keys is defined

- name: Unseal vault0
  community.kubernetes.k8s_exec:
    namespace: "{{ namespace }}"
    pod: vault-0
    command: "vault operator unseal -format=json {{ item }}"  
  register: vault_0_unseal
  loop: "{{ vault_unseal_keys }}"
  when: vault_0_unseal.stdout is undefined or
        vault_0_unseal.stdout|from_json|json_query('sealed')|bool

- name: Wait for pod to be active
  community.kubernetes.k8s_info:
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors:
      - app.kubernetes.io/name=vault
      - vault-initialized=true
      - vault-sealed=false
      - vault-active=true
  register: vault_pod_status
  until: vault_pod_status.resources|length > 0
  retries: 5
  delay: 5